{"ast":null,"code":"var _jsxFileName = \"/Users/alisherashekeyev/llm-comparator/frontend/src/App.jsx\",\n  _s = $RefreshSig$();\n// src/App.jsx\nimport React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport BenchmarkTable from './components/BenchmarkTable';\nimport TokenInputs from './components/TokenInputs';\nimport ProviderList from './components/ProviderList';\nimport CustomProviderForm from './components/CustomProviderForm';\nimport ResultsChart from './components/ResultsChart';\nimport BenchmarksDisplay from './components/BenchmarksDisplay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  // States for calculation, providers, tokens, etc.\n  const [results, setResults] = useState([]);\n  const [tokens, setTokens] = useState({\n    input: 1000,\n    output: 500\n  });\n  const [selectedProviders, setSelectedProviders] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [defaultProviders, setDefaultProviders] = useState([]);\n\n  // Benchmark table data & individual benchmarks\n  const [benchmarkTableData, setBenchmarkTableData] = useState([]);\n  const [benchmarks, setBenchmarks] = useState([]);\n\n  // Toggle states\n  const [expandedProviders, setExpandedProviders] = useState({});\n  const [expandedSource, setExpandedSource] = useState({\n    openRouter: false,\n    custom: false\n  });\n  const [showLeaderboard, setShowLeaderboard] = useState(true);\n\n  // Sorting states for benchmark table\n  const [sortKey, setSortKey] = useState(\"name\");\n  const [sortDirection, setSortDirection] = useState(\"desc\");\n\n  // Fetch default providers (OpenRouter pricing)\n  useEffect(() => {\n    async function fetchPricing() {\n      try {\n        const response = await fetch('http://localhost:8000/pricing');\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        console.log(\"Fetched default providers:\", data);\n        setDefaultProviders(data);\n      } catch (error) {\n        console.error('Error fetching pricing:', error);\n        setDefaultProviders([]);\n      }\n    }\n    fetchPricing();\n  }, []);\n\n  // Fetch benchmark table data\n  useEffect(() => {\n    async function fetchBenchmarkTable() {\n      try {\n        const response = await fetch(`http://localhost:8000/benchmark-table?sort_key=${sortKey}&direction=${sortDirection}`);\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        console.log(\"Fetched benchmark table data:\", data);\n        setBenchmarkTableData(data);\n      } catch (error) {\n        console.error(\"Error fetching benchmark table data:\", error);\n      }\n    }\n    fetchBenchmarkTable();\n  }, [sortKey, sortDirection]);\n\n  // Custom providers stored in localStorage\n  const [customProviders, setCustomProviders] = useState(() => {\n    const saved = localStorage.getItem('customProviders');\n    return saved ? JSON.parse(saved) : [];\n  });\n  const [newProvider, setNewProvider] = useState({\n    name: '',\n    model: '',\n    inputCost: 0,\n    outputCost: 0\n  });\n  const [editingIndex, setEditingIndex] = useState(null);\n  useEffect(() => {\n    localStorage.setItem('customProviders', JSON.stringify(customProviders));\n  }, [customProviders]);\n\n  // Provider editing functions\n  const editProvider = index => {\n    // For default providers, do nothing (or warn)\n    const allProviders = [...defaultProviders, ...customProviders];\n    setNewProvider({\n      ...allProviders[index]\n    });\n    setEditingIndex(index - defaultProviders.length);\n  };\n  const cancelEdit = () => {\n    setNewProvider({\n      name: '',\n      model: '',\n      inputCost: 0,\n      outputCost: 0\n    });\n    setEditingIndex(null);\n  };\n  const deleteProvider = index => {\n    if (index < defaultProviders.length) {\n      console.warn(\"Cannot delete OpenRouter provider\");\n    } else {\n      setCustomProviders(prev => prev.filter((_, i) => i !== index - defaultProviders.length));\n    }\n    setSelectedProviders(prev => prev.filter(i => i !== index).map(i => i > index ? i - 1 : i));\n  };\n  const deleteSelectedProviders = () => {\n    const defaultLen = defaultProviders.length;\n    const customIndices = selectedProviders.filter(index => index >= defaultLen).map(index => index - defaultLen);\n    setCustomProviders(prev => prev.filter((_, index) => !customIndices.includes(index)));\n    setSelectedProviders(prev => {\n      const deleted = new Set(customIndices.map(c => c + defaultLen));\n      return prev.filter(i => !deleted.has(i)).map(i => {\n        const countBefore = customIndices.filter(c => c + defaultLen < i).length;\n        return i - countBefore;\n      });\n    });\n  };\n  const updateProvider = () => {\n    if (editingIndex !== null) {\n      const updated = [...customProviders];\n      updated[editingIndex] = {\n        ...newProvider\n      };\n      setCustomProviders(updated);\n      setNewProvider({\n        name: '',\n        model: '',\n        inputCost: 0,\n        outputCost: 0\n      });\n      setEditingIndex(null);\n    }\n  };\n  const addCustomProvider = () => {\n    if (newProvider.name && newProvider.model) {\n      if (editingIndex !== null) {\n        updateProvider();\n      } else {\n        setCustomProviders([...customProviders, {\n          ...newProvider\n        }]);\n        setNewProvider({\n          name: '',\n          model: '',\n          inputCost: 0,\n          outputCost: 0\n        });\n      }\n    }\n  };\n  const deselectAllProviders = () => {\n    setSelectedProviders([]);\n  };\n  const toggleProvider = index => {\n    setSelectedProviders(prev => prev.includes(index) ? prev.filter(i => i !== index) : [...prev, index]);\n  };\n\n  // Grouping helper\n  function getGroupKey(provider) {\n    if (provider.model && provider.model.includes('/')) {\n      const prefix = provider.model.split('/')[0].trim();\n      if (prefix.toLowerCase().includes(\"mistral\")) {\n        return \"Mistral\";\n      }\n      return prefix;\n    } else if (provider.name.includes(':')) {\n      return provider.name.split(':')[0].trim();\n    }\n    return provider.name;\n  }\n  const toggleProviderGroup = groupKey => {\n    const isExpanded = expandedProviders[groupKey] === undefined ? false : expandedProviders[groupKey];\n    setExpandedProviders(prev => ({\n      ...prev,\n      [groupKey]: !isExpanded\n    }));\n  };\n  const toggleSourceGroup = source => {\n    setExpandedSource(prev => ({\n      ...prev,\n      [source]: !prev[source]\n    }));\n  };\n  useEffect(() => {\n    if (selectedProviders.length > 0) {\n      calculateCost();\n    } else {\n      setResults([]);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedProviders]);\n  const calculateCost = async () => {\n    if (selectedProviders.length === 0) {\n      setResults([]);\n      return;\n    }\n    const allProviders = [...defaultProviders, ...customProviders];\n    console.log(\"All providers:\", allProviders);\n    const selectedData = allProviders.filter((_, index) => selectedProviders.includes(index));\n    console.log(\"Selected providers data:\", selectedData);\n    try {\n      const response = await fetch('http://localhost:8000/calculate', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          input_tokens: tokens.input,\n          output_tokens: tokens.output,\n          custom_providers: selectedData\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log(\"Calculation response:\", data);\n      setResults(data);\n      setBenchmarks([]);\n    } catch (error) {\n      console.error(\"Error during calculation:\", error);\n      setResults([]);\n    }\n  };\n\n  // Fetch benchmarks for an individual model\n  const handleCalculateBenchmarks = async modelName => {\n    try {\n      const encoded = encodeURIComponent(modelName);\n      const benchRes = await fetch(`http://localhost:8000/benchmarks/${encoded}`);\n      if (!benchRes.ok) {\n        throw new Error(`HTTP error! status: ${benchRes.status}`);\n      }\n      const benchData = await benchRes.json();\n      console.log(\"Benchmarks for\", modelName, \":\", benchData);\n      setBenchmarks(benchData);\n    } catch (error) {\n      console.error(\"Error fetching benchmarks:\", error);\n      setBenchmarks([]);\n    }\n  };\n  const selectAllProviders = () => {\n    const total = defaultProviders.length + customProviders.length;\n    setSelectedProviders(Array.from({\n      length: total\n    }, (_, i) => i));\n  };\n\n  // Sorting functions for benchmark table\n  const handleSort = key => {\n    if (sortKey === key) {\n      setSortDirection(prev => prev === \"asc\" ? \"desc\" : \"asc\");\n    } else {\n      setSortKey(key);\n      setSortDirection(\"desc\");\n    }\n  };\n  const renderSortArrow = key => {\n    if (sortKey === key) {\n      return sortDirection === \"asc\" ? \" ▲\" : \" ▼\";\n    }\n    return \" ▼\";\n  };\n\n  // Prepare filtered and grouped providers\n  const filteredOpenRouter = defaultProviders.filter(provider => provider.name.toLowerCase().includes(searchQuery.toLowerCase()) || provider.model.toLowerCase().includes(searchQuery.toLowerCase())).map((provider, i) => ({\n    ...provider,\n    originalIndex: i\n  }));\n  const filteredCustom = customProviders.filter(provider => provider.name.toLowerCase().includes(searchQuery.toLowerCase()) || provider.model.toLowerCase().includes(searchQuery.toLowerCase())).map((provider, i) => ({\n    ...provider,\n    originalIndex: defaultProviders.length + i\n  }));\n  const groupedOpenRouter = filteredOpenRouter.reduce((acc, provider) => {\n    const key = getGroupKey(provider);\n    if (!acc[key]) {\n      acc[key] = [];\n    }\n    acc[key].push(provider);\n    return acc;\n  }, {});\n  const groupedCustom = filteredCustom.reduce((acc, provider) => {\n    const key = getGroupKey(provider);\n    if (!acc[key]) {\n      acc[key] = [];\n    }\n    acc[key].push(provider);\n    return acc;\n  }, {});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: '1080px',\n      margin: '0 auto',\n      padding: '36px 18px',\n      fontFamily: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif',\n      fontSize: '0.9rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      showLeaderboard: showLeaderboard,\n      toggleShowLeaderboard: () => setShowLeaderboard(prev => !prev)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 7\n    }, this), showLeaderboard && /*#__PURE__*/_jsxDEV(BenchmarkTable, {\n      benchmarkTableData: benchmarkTableData,\n      handleSort: handleSort,\n      sortKey: sortKey,\n      sortDirection: sortDirection,\n      renderSortArrow: renderSortArrow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TokenInputs, {\n      tokens: tokens,\n      setTokens: setTokens,\n      calculateCost: calculateCost,\n      selectedProviders: selectedProviders\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CustomProviderForm, {\n      newProvider: newProvider,\n      setNewProvider: setNewProvider,\n      editingIndex: editingIndex,\n      addCustomProvider: addCustomProvider,\n      cancelEdit: cancelEdit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 7\n    }, this), (filteredOpenRouter.length > 0 || filteredCustom.length > 0) && /*#__PURE__*/_jsxDEV(ProviderList, {\n      filteredOpenRouter: filteredOpenRouter,\n      filteredCustom: filteredCustom,\n      expandedSource: expandedSource,\n      toggleSourceGroup: toggleSourceGroup,\n      groupedOpenRouter: groupedOpenRouter,\n      groupedCustom: groupedCustom,\n      expandedProviders: expandedProviders,\n      toggleProviderGroup: toggleProviderGroup,\n      toggleProvider: toggleProvider,\n      selectedProviders: selectedProviders,\n      editProvider: editProvider,\n      deleteProvider: deleteProvider,\n      searchQuery: searchQuery,\n      setSearchQuery: setSearchQuery,\n      selectAllProviders: selectAllProviders,\n      deselectAllProviders: deselectAllProviders,\n      deleteSelectedProviders: deleteSelectedProviders\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 9\n    }, this), results.length > 0 && /*#__PURE__*/_jsxDEV(ResultsChart, {\n      results: results\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 9\n    }, this), benchmarks.length > 0 && /*#__PURE__*/_jsxDEV(BenchmarksDisplay, {\n      benchmarks: benchmarks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 317,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"eQG7UiuEfzcHvQJ8RPFfsl1RI5I=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","BenchmarkTable","TokenInputs","ProviderList","CustomProviderForm","ResultsChart","BenchmarksDisplay","jsxDEV","_jsxDEV","App","_s","results","setResults","tokens","setTokens","input","output","selectedProviders","setSelectedProviders","searchQuery","setSearchQuery","defaultProviders","setDefaultProviders","benchmarkTableData","setBenchmarkTableData","benchmarks","setBenchmarks","expandedProviders","setExpandedProviders","expandedSource","setExpandedSource","openRouter","custom","showLeaderboard","setShowLeaderboard","sortKey","setSortKey","sortDirection","setSortDirection","fetchPricing","response","fetch","ok","Error","status","data","json","console","log","error","fetchBenchmarkTable","customProviders","setCustomProviders","saved","localStorage","getItem","JSON","parse","newProvider","setNewProvider","name","model","inputCost","outputCost","editingIndex","setEditingIndex","setItem","stringify","editProvider","index","allProviders","length","cancelEdit","deleteProvider","warn","prev","filter","_","i","map","deleteSelectedProviders","defaultLen","customIndices","includes","deleted","Set","c","has","countBefore","updateProvider","updated","addCustomProvider","deselectAllProviders","toggleProvider","getGroupKey","provider","prefix","split","trim","toLowerCase","toggleProviderGroup","groupKey","isExpanded","undefined","toggleSourceGroup","source","calculateCost","selectedData","method","headers","body","input_tokens","output_tokens","custom_providers","handleCalculateBenchmarks","modelName","encoded","encodeURIComponent","benchRes","benchData","selectAllProviders","total","Array","from","handleSort","key","renderSortArrow","filteredOpenRouter","originalIndex","filteredCustom","groupedOpenRouter","reduce","acc","push","groupedCustom","style","maxWidth","margin","padding","fontFamily","fontSize","children","toggleShowLeaderboard","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/alisherashekeyev/llm-comparator/frontend/src/App.jsx"],"sourcesContent":["// src/App.jsx\nimport React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport BenchmarkTable from './components/BenchmarkTable';\nimport TokenInputs from './components/TokenInputs';\nimport ProviderList from './components/ProviderList';\nimport CustomProviderForm from './components/CustomProviderForm';\nimport ResultsChart from './components/ResultsChart';\nimport BenchmarksDisplay from './components/BenchmarksDisplay';\n\nexport default function App() {\n  // States for calculation, providers, tokens, etc.\n  const [results, setResults] = useState([]);\n  const [tokens, setTokens] = useState({ input: 1000, output: 500 });\n  const [selectedProviders, setSelectedProviders] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [defaultProviders, setDefaultProviders] = useState([]);\n\n  // Benchmark table data & individual benchmarks\n  const [benchmarkTableData, setBenchmarkTableData] = useState([]);\n  const [benchmarks, setBenchmarks] = useState([]);\n\n  // Toggle states\n  const [expandedProviders, setExpandedProviders] = useState({});\n  const [expandedSource, setExpandedSource] = useState({\n    openRouter: false,\n    custom: false\n  });\n  const [showLeaderboard, setShowLeaderboard] = useState(true);\n\n  // Sorting states for benchmark table\n  const [sortKey, setSortKey] = useState(\"name\");\n  const [sortDirection, setSortDirection] = useState(\"desc\");\n\n  // Fetch default providers (OpenRouter pricing)\n  useEffect(() => {\n    async function fetchPricing() {\n      try {\n        const response = await fetch('http://localhost:8000/pricing');\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        console.log(\"Fetched default providers:\", data);\n        setDefaultProviders(data);\n      } catch (error) {\n        console.error('Error fetching pricing:', error);\n        setDefaultProviders([]);\n      }\n    }\n    fetchPricing();\n  }, []);\n\n  // Fetch benchmark table data\n  useEffect(() => {\n    async function fetchBenchmarkTable() {\n      try {\n        const response = await fetch(\n          `http://localhost:8000/benchmark-table?sort_key=${sortKey}&direction=${sortDirection}`\n        );\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        console.log(\"Fetched benchmark table data:\", data);\n        setBenchmarkTableData(data);\n      } catch (error) {\n        console.error(\"Error fetching benchmark table data:\", error);\n      }\n    }\n    fetchBenchmarkTable();\n  }, [sortKey, sortDirection]);\n\n  // Custom providers stored in localStorage\n  const [customProviders, setCustomProviders] = useState(() => {\n    const saved = localStorage.getItem('customProviders');\n    return saved ? JSON.parse(saved) : [];\n  });\n  const [newProvider, setNewProvider] = useState({\n    name: '',\n    model: '',\n    inputCost: 0,\n    outputCost: 0\n  });\n  const [editingIndex, setEditingIndex] = useState(null);\n\n  useEffect(() => {\n    localStorage.setItem('customProviders', JSON.stringify(customProviders));\n  }, [customProviders]);\n\n  // Provider editing functions\n  const editProvider = (index) => {\n    // For default providers, do nothing (or warn)\n    const allProviders = [...defaultProviders, ...customProviders];\n    setNewProvider({ ...allProviders[index] });\n    setEditingIndex(index - defaultProviders.length);\n  };\n\n  const cancelEdit = () => {\n    setNewProvider({ name: '', model: '', inputCost: 0, outputCost: 0 });\n    setEditingIndex(null);\n  };\n\n  const deleteProvider = (index) => {\n    if (index < defaultProviders.length) {\n      console.warn(\"Cannot delete OpenRouter provider\");\n    } else {\n      setCustomProviders(prev =>\n        prev.filter((_, i) => i !== index - defaultProviders.length)\n      );\n    }\n    setSelectedProviders(prev =>\n      prev.filter(i => i !== index).map(i => (i > index ? i - 1 : i))\n    );\n  };\n\n  const deleteSelectedProviders = () => {\n    const defaultLen = defaultProviders.length;\n    const customIndices = selectedProviders\n      .filter(index => index >= defaultLen)\n      .map(index => index - defaultLen);\n\n    setCustomProviders(prev =>\n      prev.filter((_, index) => !customIndices.includes(index))\n    );\n\n    setSelectedProviders(prev => {\n      const deleted = new Set(customIndices.map(c => c + defaultLen));\n      return prev\n        .filter(i => !deleted.has(i))\n        .map(i => {\n          const countBefore = customIndices.filter(c => (c + defaultLen) < i).length;\n          return i - countBefore;\n        });\n    });\n  };\n\n  const updateProvider = () => {\n    if (editingIndex !== null) {\n      const updated = [...customProviders];\n      updated[editingIndex] = { ...newProvider };\n      setCustomProviders(updated);\n      setNewProvider({ name: '', model: '', inputCost: 0, outputCost: 0 });\n      setEditingIndex(null);\n    }\n  };\n\n  const addCustomProvider = () => {\n    if (newProvider.name && newProvider.model) {\n      if (editingIndex !== null) {\n        updateProvider();\n      } else {\n        setCustomProviders([...customProviders, { ...newProvider }]);\n        setNewProvider({ name: '', model: '', inputCost: 0, outputCost: 0 });\n      }\n    }\n  };\n\n  const deselectAllProviders = () => {\n    setSelectedProviders([]);\n  };\n\n  const toggleProvider = (index) => {\n    setSelectedProviders(prev =>\n      prev.includes(index)\n        ? prev.filter(i => i !== index)\n        : [...prev, index]\n    );\n  };\n\n  // Grouping helper\n  function getGroupKey(provider) {\n    if (provider.model && provider.model.includes('/')) {\n      const prefix = provider.model.split('/')[0].trim();\n      if (prefix.toLowerCase().includes(\"mistral\")) {\n        return \"Mistral\";\n      }\n      return prefix;\n    } else if (provider.name.includes(':')) {\n      return provider.name.split(':')[0].trim();\n    }\n    return provider.name;\n  }\n\n  const toggleProviderGroup = (groupKey) => {\n    const isExpanded = expandedProviders[groupKey] === undefined ? false : expandedProviders[groupKey];\n    setExpandedProviders(prev => ({\n      ...prev,\n      [groupKey]: !isExpanded\n    }));\n  };\n\n  const toggleSourceGroup = (source) => {\n    setExpandedSource(prev => ({\n      ...prev,\n      [source]: !prev[source]\n    }));\n  };\n\n  useEffect(() => {\n    if (selectedProviders.length > 0) {\n      calculateCost();\n    } else {\n      setResults([]);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedProviders]);\n\n  const calculateCost = async () => {\n    if (selectedProviders.length === 0) {\n      setResults([]);\n      return;\n    }\n    const allProviders = [...defaultProviders, ...customProviders];\n    console.log(\"All providers:\", allProviders);\n    const selectedData = allProviders.filter((_, index) =>\n      selectedProviders.includes(index)\n    );\n    console.log(\"Selected providers data:\", selectedData);\n\n    try {\n      const response = await fetch('http://localhost:8000/calculate', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          input_tokens: tokens.input,\n          output_tokens: tokens.output,\n          custom_providers: selectedData\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log(\"Calculation response:\", data);\n      setResults(data);\n      setBenchmarks([]);\n    } catch (error) {\n      console.error(\"Error during calculation:\", error);\n      setResults([]);\n    }\n  };\n\n  // Fetch benchmarks for an individual model\n  const handleCalculateBenchmarks = async (modelName) => {\n    try {\n      const encoded = encodeURIComponent(modelName);\n      const benchRes = await fetch(`http://localhost:8000/benchmarks/${encoded}`);\n      if (!benchRes.ok) {\n        throw new Error(`HTTP error! status: ${benchRes.status}`);\n      }\n      const benchData = await benchRes.json();\n      console.log(\"Benchmarks for\", modelName, \":\", benchData);\n      setBenchmarks(benchData);\n    } catch (error) {\n      console.error(\"Error fetching benchmarks:\", error);\n      setBenchmarks([]);\n    }\n  };\n\n  const selectAllProviders = () => {\n    const total = defaultProviders.length + customProviders.length;\n    setSelectedProviders(Array.from({ length: total }, (_, i) => i));\n  };\n\n  // Sorting functions for benchmark table\n  const handleSort = (key) => {\n    if (sortKey === key) {\n      setSortDirection(prev => (prev === \"asc\" ? \"desc\" : \"asc\"));\n    } else {\n      setSortKey(key);\n      setSortDirection(\"desc\");\n    }\n  };\n\n  const renderSortArrow = (key) => {\n    if (sortKey === key) {\n      return sortDirection === \"asc\" ? \" ▲\" : \" ▼\";\n    }\n    return \" ▼\";\n  };\n\n  // Prepare filtered and grouped providers\n  const filteredOpenRouter = defaultProviders\n    .filter(provider =>\n      provider.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n      provider.model.toLowerCase().includes(searchQuery.toLowerCase())\n    )\n    .map((provider, i) => ({ ...provider, originalIndex: i }));\n\n  const filteredCustom = customProviders\n    .filter(provider =>\n      provider.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n      provider.model.toLowerCase().includes(searchQuery.toLowerCase())\n    )\n    .map((provider, i) => ({ ...provider, originalIndex: defaultProviders.length + i }));\n\n  const groupedOpenRouter = filteredOpenRouter.reduce((acc, provider) => {\n    const key = getGroupKey(provider);\n    if (!acc[key]) {\n      acc[key] = [];\n    }\n    acc[key].push(provider);\n    return acc;\n  }, {});\n\n  const groupedCustom = filteredCustom.reduce((acc, provider) => {\n    const key = getGroupKey(provider);\n    if (!acc[key]) {\n      acc[key] = [];\n    }\n    acc[key].push(provider);\n    return acc;\n  }, {});\n\n  return (\n    <div\n      style={{\n        maxWidth: '1080px',\n        margin: '0 auto',\n        padding: '36px 18px',\n        fontFamily: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif',\n        fontSize: '0.9rem'\n      }}\n    >\n      <Header\n        showLeaderboard={showLeaderboard}\n        toggleShowLeaderboard={() => setShowLeaderboard(prev => !prev)}\n      />\n      \n      {/* Benchmark Table */}\n      {showLeaderboard && (\n        <BenchmarkTable\n          benchmarkTableData={benchmarkTableData}\n          handleSort={handleSort}\n          sortKey={sortKey}\n          sortDirection={sortDirection}\n          renderSortArrow={renderSortArrow}\n        />\n      )}\n\n      {/* Token Inputs */}\n      <TokenInputs\n        tokens={tokens}\n        setTokens={setTokens}\n        calculateCost={calculateCost}\n        selectedProviders={selectedProviders}\n      />\n\n      {/* Custom Provider Form */}\n      <CustomProviderForm\n        newProvider={newProvider}\n        setNewProvider={setNewProvider}\n        editingIndex={editingIndex}\n        addCustomProvider={addCustomProvider}\n        cancelEdit={cancelEdit}\n      />\n\n      {/* Providers List */}\n      {(filteredOpenRouter.length > 0 || filteredCustom.length > 0) && (\n        <ProviderList\n          filteredOpenRouter={filteredOpenRouter}\n          filteredCustom={filteredCustom}\n          expandedSource={expandedSource}\n          toggleSourceGroup={toggleSourceGroup}\n          groupedOpenRouter={groupedOpenRouter}\n          groupedCustom={groupedCustom}\n          expandedProviders={expandedProviders}\n          toggleProviderGroup={toggleProviderGroup}\n          toggleProvider={toggleProvider}\n          selectedProviders={selectedProviders}\n          editProvider={editProvider}\n          deleteProvider={deleteProvider}\n          searchQuery={searchQuery}\n          setSearchQuery={setSearchQuery}\n          selectAllProviders={selectAllProviders}\n          deselectAllProviders={deselectAllProviders}\n          deleteSelectedProviders={deleteSelectedProviders}\n        />\n      )}\n\n      {/* Results Section */}\n      {results.length > 0 && (\n        <ResultsChart results={results} />\n      )}\n\n      {/* Benchmarks Display */}\n      {benchmarks.length > 0 && (\n        <BenchmarksDisplay benchmarks={benchmarks} />\n      )}\n    </div>\n  );\n}"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,kBAAkB,MAAM,iCAAiC;AAChE,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,iBAAiB,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/D,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACe,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC;IAAEiB,KAAK,EAAE,IAAI;IAAEC,MAAM,EAAE;EAAI,CAAC,CAAC;EAClE,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC9D,MAAM,CAACqB,WAAW,EAAEC,cAAc,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACuB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;;EAE5D;EACA,MAAM,CAACyB,kBAAkB,EAAEC,qBAAqB,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAM,CAAC2B,UAAU,EAAEC,aAAa,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACA,MAAM,CAAC6B,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG9B,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC9D,MAAM,CAAC+B,cAAc,EAAEC,iBAAiB,CAAC,GAAGhC,QAAQ,CAAC;IACnDiC,UAAU,EAAE,KAAK;IACjBC,MAAM,EAAE;EACV,CAAC,CAAC;EACF,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGpC,QAAQ,CAAC,IAAI,CAAC;;EAE5D;EACA,MAAM,CAACqC,OAAO,EAAEC,UAAU,CAAC,GAAGtC,QAAQ,CAAC,MAAM,CAAC;EAC9C,MAAM,CAACuC,aAAa,EAAEC,gBAAgB,CAAC,GAAGxC,QAAQ,CAAC,MAAM,CAAC;;EAE1D;EACAC,SAAS,CAAC,MAAM;IACd,eAAewC,YAAYA,CAAA,EAAG;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,CAAC;QAC7D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;QAC3D;QACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QAClCC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEH,IAAI,CAAC;QAC/CvB,mBAAmB,CAACuB,IAAI,CAAC;MAC3B,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QAC/C3B,mBAAmB,CAAC,EAAE,CAAC;MACzB;IACF;IACAiB,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAxC,SAAS,CAAC,MAAM;IACd,eAAemD,mBAAmBA,CAAA,EAAG;MACnC,IAAI;QACF,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAC1B,kDAAkDN,OAAO,cAAcE,aAAa,EACtF,CAAC;QACD,IAAI,CAACG,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;QAC3D;QACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QAClCC,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEH,IAAI,CAAC;QAClDrB,qBAAqB,CAACqB,IAAI,CAAC;MAC7B,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;MAC9D;IACF;IACAC,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,CAACf,OAAO,EAAEE,aAAa,CAAC,CAAC;;EAE5B;EACA,MAAM,CAACc,eAAe,EAAEC,kBAAkB,CAAC,GAAGtD,QAAQ,CAAC,MAAM;IAC3D,MAAMuD,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC;IACrD,OAAOF,KAAK,GAAGG,IAAI,CAACC,KAAK,CAACJ,KAAK,CAAC,GAAG,EAAE;EACvC,CAAC,CAAC;EACF,MAAM,CAACK,WAAW,EAAEC,cAAc,CAAC,GAAG7D,QAAQ,CAAC;IAC7C8D,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE,EAAE;IACTC,SAAS,EAAE,CAAC;IACZC,UAAU,EAAE;EACd,CAAC,CAAC;EACF,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGnE,QAAQ,CAAC,IAAI,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACduD,YAAY,CAACY,OAAO,CAAC,iBAAiB,EAAEV,IAAI,CAACW,SAAS,CAAChB,eAAe,CAAC,CAAC;EAC1E,CAAC,EAAE,CAACA,eAAe,CAAC,CAAC;;EAErB;EACA,MAAMiB,YAAY,GAAIC,KAAK,IAAK;IAC9B;IACA,MAAMC,YAAY,GAAG,CAAC,GAAGjD,gBAAgB,EAAE,GAAG8B,eAAe,CAAC;IAC9DQ,cAAc,CAAC;MAAE,GAAGW,YAAY,CAACD,KAAK;IAAE,CAAC,CAAC;IAC1CJ,eAAe,CAACI,KAAK,GAAGhD,gBAAgB,CAACkD,MAAM,CAAC;EAClD,CAAC;EAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvBb,cAAc,CAAC;MAAEC,IAAI,EAAE,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEC,SAAS,EAAE,CAAC;MAAEC,UAAU,EAAE;IAAE,CAAC,CAAC;IACpEE,eAAe,CAAC,IAAI,CAAC;EACvB,CAAC;EAED,MAAMQ,cAAc,GAAIJ,KAAK,IAAK;IAChC,IAAIA,KAAK,GAAGhD,gBAAgB,CAACkD,MAAM,EAAE;MACnCxB,OAAO,CAAC2B,IAAI,CAAC,mCAAmC,CAAC;IACnD,CAAC,MAAM;MACLtB,kBAAkB,CAACuB,IAAI,IACrBA,IAAI,CAACC,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,KAAKT,KAAK,GAAGhD,gBAAgB,CAACkD,MAAM,CAC7D,CAAC;IACH;IACArD,oBAAoB,CAACyD,IAAI,IACvBA,IAAI,CAACC,MAAM,CAACE,CAAC,IAAIA,CAAC,KAAKT,KAAK,CAAC,CAACU,GAAG,CAACD,CAAC,IAAKA,CAAC,GAAGT,KAAK,GAAGS,CAAC,GAAG,CAAC,GAAGA,CAAE,CAChE,CAAC;EACH,CAAC;EAED,MAAME,uBAAuB,GAAGA,CAAA,KAAM;IACpC,MAAMC,UAAU,GAAG5D,gBAAgB,CAACkD,MAAM;IAC1C,MAAMW,aAAa,GAAGjE,iBAAiB,CACpC2D,MAAM,CAACP,KAAK,IAAIA,KAAK,IAAIY,UAAU,CAAC,CACpCF,GAAG,CAACV,KAAK,IAAIA,KAAK,GAAGY,UAAU,CAAC;IAEnC7B,kBAAkB,CAACuB,IAAI,IACrBA,IAAI,CAACC,MAAM,CAAC,CAACC,CAAC,EAAER,KAAK,KAAK,CAACa,aAAa,CAACC,QAAQ,CAACd,KAAK,CAAC,CAC1D,CAAC;IAEDnD,oBAAoB,CAACyD,IAAI,IAAI;MAC3B,MAAMS,OAAO,GAAG,IAAIC,GAAG,CAACH,aAAa,CAACH,GAAG,CAACO,CAAC,IAAIA,CAAC,GAAGL,UAAU,CAAC,CAAC;MAC/D,OAAON,IAAI,CACRC,MAAM,CAACE,CAAC,IAAI,CAACM,OAAO,CAACG,GAAG,CAACT,CAAC,CAAC,CAAC,CAC5BC,GAAG,CAACD,CAAC,IAAI;QACR,MAAMU,WAAW,GAAGN,aAAa,CAACN,MAAM,CAACU,CAAC,IAAKA,CAAC,GAAGL,UAAU,GAAIH,CAAC,CAAC,CAACP,MAAM;QAC1E,OAAOO,CAAC,GAAGU,WAAW;MACxB,CAAC,CAAC;IACN,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAIzB,YAAY,KAAK,IAAI,EAAE;MACzB,MAAM0B,OAAO,GAAG,CAAC,GAAGvC,eAAe,CAAC;MACpCuC,OAAO,CAAC1B,YAAY,CAAC,GAAG;QAAE,GAAGN;MAAY,CAAC;MAC1CN,kBAAkB,CAACsC,OAAO,CAAC;MAC3B/B,cAAc,CAAC;QAAEC,IAAI,EAAE,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,SAAS,EAAE,CAAC;QAAEC,UAAU,EAAE;MAAE,CAAC,CAAC;MACpEE,eAAe,CAAC,IAAI,CAAC;IACvB;EACF,CAAC;EAED,MAAM0B,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAIjC,WAAW,CAACE,IAAI,IAAIF,WAAW,CAACG,KAAK,EAAE;MACzC,IAAIG,YAAY,KAAK,IAAI,EAAE;QACzByB,cAAc,CAAC,CAAC;MAClB,CAAC,MAAM;QACLrC,kBAAkB,CAAC,CAAC,GAAGD,eAAe,EAAE;UAAE,GAAGO;QAAY,CAAC,CAAC,CAAC;QAC5DC,cAAc,CAAC;UAAEC,IAAI,EAAE,EAAE;UAAEC,KAAK,EAAE,EAAE;UAAEC,SAAS,EAAE,CAAC;UAAEC,UAAU,EAAE;QAAE,CAAC,CAAC;MACtE;IACF;EACF,CAAC;EAED,MAAM6B,oBAAoB,GAAGA,CAAA,KAAM;IACjC1E,oBAAoB,CAAC,EAAE,CAAC;EAC1B,CAAC;EAED,MAAM2E,cAAc,GAAIxB,KAAK,IAAK;IAChCnD,oBAAoB,CAACyD,IAAI,IACvBA,IAAI,CAACQ,QAAQ,CAACd,KAAK,CAAC,GAChBM,IAAI,CAACC,MAAM,CAACE,CAAC,IAAIA,CAAC,KAAKT,KAAK,CAAC,GAC7B,CAAC,GAAGM,IAAI,EAAEN,KAAK,CACrB,CAAC;EACH,CAAC;;EAED;EACA,SAASyB,WAAWA,CAACC,QAAQ,EAAE;IAC7B,IAAIA,QAAQ,CAAClC,KAAK,IAAIkC,QAAQ,CAAClC,KAAK,CAACsB,QAAQ,CAAC,GAAG,CAAC,EAAE;MAClD,MAAMa,MAAM,GAAGD,QAAQ,CAAClC,KAAK,CAACoC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;MAClD,IAAIF,MAAM,CAACG,WAAW,CAAC,CAAC,CAAChB,QAAQ,CAAC,SAAS,CAAC,EAAE;QAC5C,OAAO,SAAS;MAClB;MACA,OAAOa,MAAM;IACf,CAAC,MAAM,IAAID,QAAQ,CAACnC,IAAI,CAACuB,QAAQ,CAAC,GAAG,CAAC,EAAE;MACtC,OAAOY,QAAQ,CAACnC,IAAI,CAACqC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;IAC3C;IACA,OAAOH,QAAQ,CAACnC,IAAI;EACtB;EAEA,MAAMwC,mBAAmB,GAAIC,QAAQ,IAAK;IACxC,MAAMC,UAAU,GAAG3E,iBAAiB,CAAC0E,QAAQ,CAAC,KAAKE,SAAS,GAAG,KAAK,GAAG5E,iBAAiB,CAAC0E,QAAQ,CAAC;IAClGzE,oBAAoB,CAAC+C,IAAI,KAAK;MAC5B,GAAGA,IAAI;MACP,CAAC0B,QAAQ,GAAG,CAACC;IACf,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAME,iBAAiB,GAAIC,MAAM,IAAK;IACpC3E,iBAAiB,CAAC6C,IAAI,KAAK;MACzB,GAAGA,IAAI;MACP,CAAC8B,MAAM,GAAG,CAAC9B,IAAI,CAAC8B,MAAM;IACxB,CAAC,CAAC,CAAC;EACL,CAAC;EAED1G,SAAS,CAAC,MAAM;IACd,IAAIkB,iBAAiB,CAACsD,MAAM,GAAG,CAAC,EAAE;MAChCmC,aAAa,CAAC,CAAC;IACjB,CAAC,MAAM;MACL9F,UAAU,CAAC,EAAE,CAAC;IAChB;IACA;EACF,CAAC,EAAE,CAACK,iBAAiB,CAAC,CAAC;EAEvB,MAAMyF,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAIzF,iBAAiB,CAACsD,MAAM,KAAK,CAAC,EAAE;MAClC3D,UAAU,CAAC,EAAE,CAAC;MACd;IACF;IACA,MAAM0D,YAAY,GAAG,CAAC,GAAGjD,gBAAgB,EAAE,GAAG8B,eAAe,CAAC;IAC9DJ,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEsB,YAAY,CAAC;IAC3C,MAAMqC,YAAY,GAAGrC,YAAY,CAACM,MAAM,CAAC,CAACC,CAAC,EAAER,KAAK,KAChDpD,iBAAiB,CAACkE,QAAQ,CAACd,KAAK,CAClC,CAAC;IACDtB,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAE2D,YAAY,CAAC;IAErD,IAAI;MACF,MAAMnE,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;QAC9DmE,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEtD,IAAI,CAACW,SAAS,CAAC;UACnB4C,YAAY,EAAElG,MAAM,CAACE,KAAK;UAC1BiG,aAAa,EAAEnG,MAAM,CAACG,MAAM;UAC5BiG,gBAAgB,EAAEN;QACpB,CAAC;MACH,CAAC,CAAC;MACF,IAAI,CAACnE,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;MAC3D;MACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAClCC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEH,IAAI,CAAC;MAC1CjC,UAAU,CAACiC,IAAI,CAAC;MAChBnB,aAAa,CAAC,EAAE,CAAC;IACnB,CAAC,CAAC,OAAOuB,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjDrC,UAAU,CAAC,EAAE,CAAC;IAChB;EACF,CAAC;;EAED;EACA,MAAMsG,yBAAyB,GAAG,MAAOC,SAAS,IAAK;IACrD,IAAI;MACF,MAAMC,OAAO,GAAGC,kBAAkB,CAACF,SAAS,CAAC;MAC7C,MAAMG,QAAQ,GAAG,MAAM7E,KAAK,CAAC,oCAAoC2E,OAAO,EAAE,CAAC;MAC3E,IAAI,CAACE,QAAQ,CAAC5E,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB2E,QAAQ,CAAC1E,MAAM,EAAE,CAAC;MAC3D;MACA,MAAM2E,SAAS,GAAG,MAAMD,QAAQ,CAACxE,IAAI,CAAC,CAAC;MACvCC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEmE,SAAS,EAAE,GAAG,EAAEI,SAAS,CAAC;MACxD7F,aAAa,CAAC6F,SAAS,CAAC;IAC1B,CAAC,CAAC,OAAOtE,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClDvB,aAAa,CAAC,EAAE,CAAC;IACnB;EACF,CAAC;EAED,MAAM8F,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,MAAMC,KAAK,GAAGpG,gBAAgB,CAACkD,MAAM,GAAGpB,eAAe,CAACoB,MAAM;IAC9DrD,oBAAoB,CAACwG,KAAK,CAACC,IAAI,CAAC;MAAEpD,MAAM,EAAEkD;IAAM,CAAC,EAAE,CAAC5C,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAAC,CAAC;EAClE,CAAC;;EAED;EACA,MAAM8C,UAAU,GAAIC,GAAG,IAAK;IAC1B,IAAI1F,OAAO,KAAK0F,GAAG,EAAE;MACnBvF,gBAAgB,CAACqC,IAAI,IAAKA,IAAI,KAAK,KAAK,GAAG,MAAM,GAAG,KAAM,CAAC;IAC7D,CAAC,MAAM;MACLvC,UAAU,CAACyF,GAAG,CAAC;MACfvF,gBAAgB,CAAC,MAAM,CAAC;IAC1B;EACF,CAAC;EAED,MAAMwF,eAAe,GAAID,GAAG,IAAK;IAC/B,IAAI1F,OAAO,KAAK0F,GAAG,EAAE;MACnB,OAAOxF,aAAa,KAAK,KAAK,GAAG,IAAI,GAAG,IAAI;IAC9C;IACA,OAAO,IAAI;EACb,CAAC;;EAED;EACA,MAAM0F,kBAAkB,GAAG1G,gBAAgB,CACxCuD,MAAM,CAACmB,QAAQ,IACdA,QAAQ,CAACnC,IAAI,CAACuC,WAAW,CAAC,CAAC,CAAChB,QAAQ,CAAChE,WAAW,CAACgF,WAAW,CAAC,CAAC,CAAC,IAC/DJ,QAAQ,CAAClC,KAAK,CAACsC,WAAW,CAAC,CAAC,CAAChB,QAAQ,CAAChE,WAAW,CAACgF,WAAW,CAAC,CAAC,CACjE,CAAC,CACApB,GAAG,CAAC,CAACgB,QAAQ,EAAEjB,CAAC,MAAM;IAAE,GAAGiB,QAAQ;IAAEiC,aAAa,EAAElD;EAAE,CAAC,CAAC,CAAC;EAE5D,MAAMmD,cAAc,GAAG9E,eAAe,CACnCyB,MAAM,CAACmB,QAAQ,IACdA,QAAQ,CAACnC,IAAI,CAACuC,WAAW,CAAC,CAAC,CAAChB,QAAQ,CAAChE,WAAW,CAACgF,WAAW,CAAC,CAAC,CAAC,IAC/DJ,QAAQ,CAAClC,KAAK,CAACsC,WAAW,CAAC,CAAC,CAAChB,QAAQ,CAAChE,WAAW,CAACgF,WAAW,CAAC,CAAC,CACjE,CAAC,CACApB,GAAG,CAAC,CAACgB,QAAQ,EAAEjB,CAAC,MAAM;IAAE,GAAGiB,QAAQ;IAAEiC,aAAa,EAAE3G,gBAAgB,CAACkD,MAAM,GAAGO;EAAE,CAAC,CAAC,CAAC;EAEtF,MAAMoD,iBAAiB,GAAGH,kBAAkB,CAACI,MAAM,CAAC,CAACC,GAAG,EAAErC,QAAQ,KAAK;IACrE,MAAM8B,GAAG,GAAG/B,WAAW,CAACC,QAAQ,CAAC;IACjC,IAAI,CAACqC,GAAG,CAACP,GAAG,CAAC,EAAE;MACbO,GAAG,CAACP,GAAG,CAAC,GAAG,EAAE;IACf;IACAO,GAAG,CAACP,GAAG,CAAC,CAACQ,IAAI,CAACtC,QAAQ,CAAC;IACvB,OAAOqC,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC,CAAC;EAEN,MAAME,aAAa,GAAGL,cAAc,CAACE,MAAM,CAAC,CAACC,GAAG,EAAErC,QAAQ,KAAK;IAC7D,MAAM8B,GAAG,GAAG/B,WAAW,CAACC,QAAQ,CAAC;IACjC,IAAI,CAACqC,GAAG,CAACP,GAAG,CAAC,EAAE;MACbO,GAAG,CAACP,GAAG,CAAC,GAAG,EAAE;IACf;IACAO,GAAG,CAACP,GAAG,CAAC,CAACQ,IAAI,CAACtC,QAAQ,CAAC;IACvB,OAAOqC,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC,CAAC;EAEN,oBACE5H,OAAA;IACE+H,KAAK,EAAE;MACLC,QAAQ,EAAE,QAAQ;MAClBC,MAAM,EAAE,QAAQ;MAChBC,OAAO,EAAE,WAAW;MACpBC,UAAU,EAAE,4FAA4F;MACxGC,QAAQ,EAAE;IACZ,CAAE;IAAAC,QAAA,gBAEFrI,OAAA,CAACR,MAAM;MACLiC,eAAe,EAAEA,eAAgB;MACjC6G,qBAAqB,EAAEA,CAAA,KAAM5G,kBAAkB,CAACyC,IAAI,IAAI,CAACA,IAAI;IAAE;MAAAoE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChE,CAAC,EAGDjH,eAAe,iBACdzB,OAAA,CAACP,cAAc;MACbsB,kBAAkB,EAAEA,kBAAmB;MACvCqG,UAAU,EAAEA,UAAW;MACvBzF,OAAO,EAAEA,OAAQ;MACjBE,aAAa,EAAEA,aAAc;MAC7ByF,eAAe,EAAEA;IAAgB;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CACF,eAGD1I,OAAA,CAACN,WAAW;MACVW,MAAM,EAAEA,MAAO;MACfC,SAAS,EAAEA,SAAU;MACrB4F,aAAa,EAAEA,aAAc;MAC7BzF,iBAAiB,EAAEA;IAAkB;MAAA8H,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,eAGF1I,OAAA,CAACJ,kBAAkB;MACjBsD,WAAW,EAAEA,WAAY;MACzBC,cAAc,EAAEA,cAAe;MAC/BK,YAAY,EAAEA,YAAa;MAC3B2B,iBAAiB,EAAEA,iBAAkB;MACrCnB,UAAU,EAAEA;IAAW;MAAAuE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,EAGD,CAACnB,kBAAkB,CAACxD,MAAM,GAAG,CAAC,IAAI0D,cAAc,CAAC1D,MAAM,GAAG,CAAC,kBAC1D/D,OAAA,CAACL,YAAY;MACX4H,kBAAkB,EAAEA,kBAAmB;MACvCE,cAAc,EAAEA,cAAe;MAC/BpG,cAAc,EAAEA,cAAe;MAC/B2E,iBAAiB,EAAEA,iBAAkB;MACrC0B,iBAAiB,EAAEA,iBAAkB;MACrCI,aAAa,EAAEA,aAAc;MAC7B3G,iBAAiB,EAAEA,iBAAkB;MACrCyE,mBAAmB,EAAEA,mBAAoB;MACzCP,cAAc,EAAEA,cAAe;MAC/B5E,iBAAiB,EAAEA,iBAAkB;MACrCmD,YAAY,EAAEA,YAAa;MAC3BK,cAAc,EAAEA,cAAe;MAC/BtD,WAAW,EAAEA,WAAY;MACzBC,cAAc,EAAEA,cAAe;MAC/BoG,kBAAkB,EAAEA,kBAAmB;MACvC5B,oBAAoB,EAAEA,oBAAqB;MAC3CZ,uBAAuB,EAAEA;IAAwB;MAAA+D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CACF,EAGAvI,OAAO,CAAC4D,MAAM,GAAG,CAAC,iBACjB/D,OAAA,CAACH,YAAY;MAACM,OAAO,EAAEA;IAAQ;MAAAoI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAClC,EAGAzH,UAAU,CAAC8C,MAAM,GAAG,CAAC,iBACpB/D,OAAA,CAACF,iBAAiB;MAACmB,UAAU,EAAEA;IAAW;MAAAsH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAC7C;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACxI,EAAA,CA9XuBD,GAAG;AAAA0I,EAAA,GAAH1I,GAAG;AAAA,IAAA0I,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
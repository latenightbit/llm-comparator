{"ast":null,"code":"var _jsxFileName = \"/Users/alisherashekeyev/llm-comparator/frontend/src/App.jsx\",\n  _s = $RefreshSig$();\n// src/App.jsx\nimport React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport FeaturesGrid from './components/FeaturesGrid'; // <-- newly added\nimport Footer from './components/Footer'; // <-- newly added\n\nimport BenchmarkTable from './components/BenchmarkTable';\nimport TokenInputs from './components/TokenInputs';\nimport ProviderList from './components/ProviderList';\nimport CustomProviderForm from './components/CustomProviderForm';\nimport ResultsChart from './components/ResultsChart';\nimport BenchmarksDisplay from './components/BenchmarksDisplay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  // States for calculation, providers, tokens, etc.\n  const [results, setResults] = useState([]);\n  const [tokens, setTokens] = useState({\n    input: 1000,\n    output: 500\n  });\n  const [selectedProviders, setSelectedProviders] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [defaultProviders, setDefaultProviders] = useState([]);\n\n  // Benchmark table data & individual benchmarks\n  const [benchmarkTableData, setBenchmarkTableData] = useState([]);\n  const [benchmarks, setBenchmarks] = useState([]);\n\n  // Toggle states\n  const [expandedProviders, setExpandedProviders] = useState({});\n  const [expandedSource, setExpandedSource] = useState({\n    openRouter: false,\n    custom: false\n  });\n  const [showLeaderboard, setShowLeaderboard] = useState(true);\n\n  // Sorting states for benchmark table\n  const [sortKey, setSortKey] = useState(\"name\");\n  const [sortDirection, setSortDirection] = useState(\"desc\");\n\n  // Fetch default providers (OpenRouter pricing)\n  useEffect(() => {\n    async function fetchPricing() {\n      try {\n        const response = await fetch('http://localhost:8000/pricing');\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        console.log(\"Fetched default providers:\", data);\n        setDefaultProviders(data);\n      } catch (error) {\n        console.error('Error fetching pricing:', error);\n        setDefaultProviders([]);\n      }\n    }\n    fetchPricing();\n  }, []);\n\n  // Fetch benchmark table data\n  useEffect(() => {\n    async function fetchBenchmarkTable() {\n      try {\n        const response = await fetch(`http://localhost:8000/benchmark-table?sort_key=${sortKey}&direction=${sortDirection}`);\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        console.log(\"Fetched benchmark table data:\", data);\n        setBenchmarkTableData(data);\n      } catch (error) {\n        console.error(\"Error fetching benchmark table data:\", error);\n      }\n    }\n    fetchBenchmarkTable();\n  }, [sortKey, sortDirection]);\n\n  // Custom providers stored in localStorage\n  const [customProviders, setCustomProviders] = useState(() => {\n    const saved = localStorage.getItem('customProviders');\n    return saved ? JSON.parse(saved) : [];\n  });\n  const [newProvider, setNewProvider] = useState({\n    name: '',\n    model: '',\n    inputCost: 0,\n    outputCost: 0\n  });\n  const [editingIndex, setEditingIndex] = useState(null);\n  useEffect(() => {\n    localStorage.setItem('customProviders', JSON.stringify(customProviders));\n  }, [customProviders]);\n\n  // Provider editing functions\n  const editProvider = index => {\n    // For default providers, do nothing (or warn)\n    const allProviders = [...defaultProviders, ...customProviders];\n    setNewProvider({\n      ...allProviders[index]\n    });\n    setEditingIndex(index - defaultProviders.length);\n  };\n  const cancelEdit = () => {\n    setNewProvider({\n      name: '',\n      model: '',\n      inputCost: 0,\n      outputCost: 0\n    });\n    setEditingIndex(null);\n  };\n  const deleteProvider = index => {\n    if (index < defaultProviders.length) {\n      console.warn(\"Cannot delete OpenRouter provider\");\n    } else {\n      setCustomProviders(prev => prev.filter((_, i) => i !== index - defaultProviders.length));\n    }\n    setSelectedProviders(prev => prev.filter(i => i !== index).map(i => i > index ? i - 1 : i));\n  };\n  const deleteSelectedProviders = () => {\n    const defaultLen = defaultProviders.length;\n    const customIndices = selectedProviders.filter(index => index >= defaultLen).map(index => index - defaultLen);\n    setCustomProviders(prev => prev.filter((_, index) => !customIndices.includes(index)));\n    setSelectedProviders(prev => {\n      const deleted = new Set(customIndices.map(c => c + defaultLen));\n      return prev.filter(i => !deleted.has(i)).map(i => {\n        const countBefore = customIndices.filter(c => c + defaultLen < i).length;\n        return i - countBefore;\n      });\n    });\n  };\n  const updateProvider = () => {\n    if (editingIndex !== null) {\n      const updated = [...customProviders];\n      updated[editingIndex] = {\n        ...newProvider\n      };\n      setCustomProviders(updated);\n      setNewProvider({\n        name: '',\n        model: '',\n        inputCost: 0,\n        outputCost: 0\n      });\n      setEditingIndex(null);\n    }\n  };\n  const addCustomProvider = () => {\n    if (newProvider.name && newProvider.model) {\n      if (editingIndex !== null) {\n        updateProvider();\n      } else {\n        setCustomProviders([...customProviders, {\n          ...newProvider\n        }]);\n        setNewProvider({\n          name: '',\n          model: '',\n          inputCost: 0,\n          outputCost: 0\n        });\n      }\n    }\n  };\n  const deselectAllProviders = () => {\n    setSelectedProviders([]);\n  };\n  const toggleProvider = index => {\n    setSelectedProviders(prev => prev.includes(index) ? prev.filter(i => i !== index) : [...prev, index]);\n  };\n\n  // Grouping helper\n  function getGroupKey(provider) {\n    if (provider.model && provider.model.includes('/')) {\n      const prefix = provider.model.split('/')[0].trim();\n      if (prefix.toLowerCase().includes(\"mistral\")) {\n        return \"Mistral\";\n      }\n      return prefix;\n    } else if (provider.name.includes(':')) {\n      return provider.name.split(':')[0].trim();\n    }\n    return provider.name;\n  }\n  const [resultsState, setResultsState] = useState([]); // DON'T REDECLARE 'results'!\n  // Just remove or rename if you see duplication. \n  // We'll skip using resultsState for now—use 'results' from above.\n\n  const [calcLoading, setCalcLoading] = useState(false);\n  const toggleProviderGroup = groupKey => {\n    const isExpanded = expandedProviders[groupKey] === undefined ? false : expandedProviders[groupKey];\n    setExpandedProviders(prev => ({\n      ...prev,\n      [groupKey]: !isExpanded\n    }));\n  };\n  const toggleSourceGroup = source => {\n    setExpandedSource(prev => ({\n      ...prev,\n      [source]: !prev[source]\n    }));\n  };\n  useEffect(() => {\n    if (selectedProviders.length > 0) {\n      calculateCost();\n    } else {\n      setResults([]);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedProviders]);\n  const calculateCost = async () => {\n    if (selectedProviders.length === 0) {\n      setResults([]);\n      return;\n    }\n    const allProviders = [...defaultProviders, ...customProviders];\n    console.log(\"All providers:\", allProviders);\n    const selectedData = allProviders.filter((_, index) => selectedProviders.includes(index));\n    console.log(\"Selected providers data:\", selectedData);\n    try {\n      setCalcLoading(true);\n      const response = await fetch('http://localhost:8000/calculate', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          input_tokens: tokens.input,\n          output_tokens: tokens.output,\n          custom_providers: selectedData\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log(\"Calculation response:\", data);\n      setResults(data);\n      setBenchmarks([]);\n    } catch (error) {\n      console.error(\"Error during calculation:\", error);\n      setResults([]);\n    } finally {\n      setCalcLoading(false);\n    }\n  };\n\n  // Fetch benchmarks for an individual model\n  const handleCalculateBenchmarks = async modelName => {\n    try {\n      const encoded = encodeURIComponent(modelName);\n      const benchRes = await fetch(`http://localhost:8000/benchmarks/${encoded}`);\n      if (!benchRes.ok) {\n        throw new Error(`HTTP error! status: ${benchRes.status}`);\n      }\n      const benchData = await benchRes.json();\n      console.log(\"Benchmarks for\", modelName, \":\", benchData);\n      setBenchmarks(benchData);\n    } catch (error) {\n      console.error(\"Error fetching benchmarks:\", error);\n      setBenchmarks([]);\n    }\n  };\n  const selectAllProviders = () => {\n    const total = defaultProviders.length + customProviders.length;\n    setSelectedProviders(Array.from({\n      length: total\n    }, (_, i) => i));\n  };\n\n  // Sorting functions for benchmark table\n  const handleSort = key => {\n    if (sortKey === key) {\n      setSortDirection(prev => prev === \"asc\" ? \"desc\" : \"asc\");\n    } else {\n      setSortKey(key);\n      setSortDirection(\"desc\");\n    }\n  };\n  const renderSortArrow = key => {\n    if (sortKey === key) {\n      return sortDirection === \"asc\" ? \" ▲\" : \" ▼\";\n    }\n    return \" ▼\";\n  };\n\n  // Prepare filtered and grouped providers\n  const filteredOpenRouter = defaultProviders.filter(provider => provider.name.toLowerCase().includes(searchQuery.toLowerCase()) || provider.model.toLowerCase().includes(searchQuery.toLowerCase())).map((provider, i) => ({\n    ...provider,\n    originalIndex: i\n  }));\n  const filteredCustom = customProviders.filter(provider => provider.name.toLowerCase().includes(searchQuery.toLowerCase()) || provider.model.toLowerCase().includes(searchQuery.toLowerCase())).map((provider, i) => ({\n    ...provider,\n    originalIndex: defaultProviders.length + i\n  }));\n  const groupedOpenRouter = filteredOpenRouter.reduce((acc, provider) => {\n    const key = getGroupKey(provider);\n    if (!acc[key]) {\n      acc[key] = [];\n    }\n    acc[key].push(provider);\n    return acc;\n  }, {});\n  const groupedCustom = filteredCustom.reduce((acc, provider) => {\n    const key = getGroupKey(provider);\n    if (!acc[key]) {\n      acc[key] = [];\n    }\n    acc[key].push(provider);\n    return acc;\n  }, {});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      fontFamily: 'inherit'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 7\n    }, this), \"showLeaderboard=\", showLeaderboard, \"toggleShowLeaderboard=\", () => setShowLeaderboard(prev => !prev), \"/>\", /*#__PURE__*/_jsxDEV(FeaturesGrid, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        padding: '2rem 0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'flex-end',\n          marginBottom: '1rem'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowLeaderboard(prev => !prev),\n          className: \"btn btn-secondary\",\n          children: showLeaderboard ? 'Hide Leaderboard' : 'Show Leaderboard'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this), showLeaderboard && /*#__PURE__*/_jsxDEV(BenchmarkTable, {\n        benchmarkTableData: benchmarkTableData,\n        handleSort: handleSort,\n        sortKey: sortKey,\n        sortDirection: sortDirection,\n        renderSortArrow: renderSortArrow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TokenInputs, {\n        tokens: tokens,\n        setTokens: setTokens,\n        calculateCost: calculateCost,\n        selectedProviders: selectedProviders\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomProviderForm, {\n        newProvider: newProvider,\n        setNewProvider: setNewProvider,\n        editingIndex: editingIndex,\n        addCustomProvider: addCustomProvider,\n        cancelEdit: cancelEdit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this), (filteredOpenRouter.length > 0 || filteredCustom.length > 0) && /*#__PURE__*/_jsxDEV(ProviderList, {\n        filteredOpenRouter: filteredOpenRouter,\n        filteredCustom: filteredCustom,\n        expandedSource: expandedSource,\n        toggleSourceGroup: toggleSourceGroup,\n        groupedOpenRouter: groupedOpenRouter,\n        groupedCustom: groupedCustom,\n        expandedProviders: expandedProviders,\n        toggleProviderGroup: toggleProviderGroup,\n        toggleProvider: toggleProvider,\n        selectedProviders: selectedProviders,\n        editProvider: editProvider,\n        deleteProvider: deleteProvider,\n        searchQuery: searchQuery,\n        setSearchQuery: setSearchQuery,\n        selectAllProviders: selectAllProviders,\n        deselectAllProviders: deselectAllProviders,\n        deleteSelectedProviders: deleteSelectedProviders\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 11\n      }, this), results.length > 0 && /*#__PURE__*/_jsxDEV(ResultsChart, {\n        results: results\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 11\n      }, this), benchmarks.length > 0 && /*#__PURE__*/_jsxDEV(BenchmarksDisplay, {\n        benchmarks: benchmarks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 328,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"49ivlqzTNgPGcp8Y41EZOEjoqIc=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","FeaturesGrid","Footer","BenchmarkTable","TokenInputs","ProviderList","CustomProviderForm","ResultsChart","BenchmarksDisplay","jsxDEV","_jsxDEV","App","_s","results","setResults","tokens","setTokens","input","output","selectedProviders","setSelectedProviders","searchQuery","setSearchQuery","defaultProviders","setDefaultProviders","benchmarkTableData","setBenchmarkTableData","benchmarks","setBenchmarks","expandedProviders","setExpandedProviders","expandedSource","setExpandedSource","openRouter","custom","showLeaderboard","setShowLeaderboard","sortKey","setSortKey","sortDirection","setSortDirection","fetchPricing","response","fetch","ok","Error","status","data","json","console","log","error","fetchBenchmarkTable","customProviders","setCustomProviders","saved","localStorage","getItem","JSON","parse","newProvider","setNewProvider","name","model","inputCost","outputCost","editingIndex","setEditingIndex","setItem","stringify","editProvider","index","allProviders","length","cancelEdit","deleteProvider","warn","prev","filter","_","i","map","deleteSelectedProviders","defaultLen","customIndices","includes","deleted","Set","c","has","countBefore","updateProvider","updated","addCustomProvider","deselectAllProviders","toggleProvider","getGroupKey","provider","prefix","split","trim","toLowerCase","resultsState","setResultsState","calcLoading","setCalcLoading","toggleProviderGroup","groupKey","isExpanded","undefined","toggleSourceGroup","source","calculateCost","selectedData","method","headers","body","input_tokens","output_tokens","custom_providers","handleCalculateBenchmarks","modelName","encoded","encodeURIComponent","benchRes","benchData","selectAllProviders","total","Array","from","handleSort","key","renderSortArrow","filteredOpenRouter","originalIndex","filteredCustom","groupedOpenRouter","reduce","acc","push","groupedCustom","style","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","className","padding","display","justifyContent","marginBottom","onClick","_c","$RefreshReg$"],"sources":["/Users/alisherashekeyev/llm-comparator/frontend/src/App.jsx"],"sourcesContent":["// src/App.jsx\nimport React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport FeaturesGrid from './components/FeaturesGrid'; // <-- newly added\nimport Footer from './components/Footer'; // <-- newly added\n\nimport BenchmarkTable from './components/BenchmarkTable';\nimport TokenInputs from './components/TokenInputs';\nimport ProviderList from './components/ProviderList';\nimport CustomProviderForm from './components/CustomProviderForm';\nimport ResultsChart from './components/ResultsChart';\nimport BenchmarksDisplay from './components/BenchmarksDisplay';\n\nexport default function App() {\n  // States for calculation, providers, tokens, etc.\n  const [results, setResults] = useState([]);\n  const [tokens, setTokens] = useState({ input: 1000, output: 500 });\n  const [selectedProviders, setSelectedProviders] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [defaultProviders, setDefaultProviders] = useState([]);\n\n  // Benchmark table data & individual benchmarks\n  const [benchmarkTableData, setBenchmarkTableData] = useState([]);\n  const [benchmarks, setBenchmarks] = useState([]);\n\n  // Toggle states\n  const [expandedProviders, setExpandedProviders] = useState({});\n  const [expandedSource, setExpandedSource] = useState({\n    openRouter: false,\n    custom: false\n  });\n  const [showLeaderboard, setShowLeaderboard] = useState(true);\n\n  // Sorting states for benchmark table\n  const [sortKey, setSortKey] = useState(\"name\");\n  const [sortDirection, setSortDirection] = useState(\"desc\");\n\n  // Fetch default providers (OpenRouter pricing)\n  useEffect(() => {\n    async function fetchPricing() {\n      try {\n        const response = await fetch('http://localhost:8000/pricing');\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        console.log(\"Fetched default providers:\", data);\n        setDefaultProviders(data);\n      } catch (error) {\n        console.error('Error fetching pricing:', error);\n        setDefaultProviders([]);\n      }\n    }\n    fetchPricing();\n  }, []);\n\n  // Fetch benchmark table data\n  useEffect(() => {\n    async function fetchBenchmarkTable() {\n      try {\n        const response = await fetch(\n          `http://localhost:8000/benchmark-table?sort_key=${sortKey}&direction=${sortDirection}`\n        );\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        console.log(\"Fetched benchmark table data:\", data);\n        setBenchmarkTableData(data);\n      } catch (error) {\n        console.error(\"Error fetching benchmark table data:\", error);\n      }\n    }\n    fetchBenchmarkTable();\n  }, [sortKey, sortDirection]);\n\n  // Custom providers stored in localStorage\n  const [customProviders, setCustomProviders] = useState(() => {\n    const saved = localStorage.getItem('customProviders');\n    return saved ? JSON.parse(saved) : [];\n  });\n  const [newProvider, setNewProvider] = useState({\n    name: '',\n    model: '',\n    inputCost: 0,\n    outputCost: 0\n  });\n  const [editingIndex, setEditingIndex] = useState(null);\n\n  useEffect(() => {\n    localStorage.setItem('customProviders', JSON.stringify(customProviders));\n  }, [customProviders]);\n\n  // Provider editing functions\n  const editProvider = (index) => {\n    // For default providers, do nothing (or warn)\n    const allProviders = [...defaultProviders, ...customProviders];\n    setNewProvider({ ...allProviders[index] });\n    setEditingIndex(index - defaultProviders.length);\n  };\n\n  const cancelEdit = () => {\n    setNewProvider({ name: '', model: '', inputCost: 0, outputCost: 0 });\n    setEditingIndex(null);\n  };\n\n  const deleteProvider = (index) => {\n    if (index < defaultProviders.length) {\n      console.warn(\"Cannot delete OpenRouter provider\");\n    } else {\n      setCustomProviders(prev =>\n        prev.filter((_, i) => i !== index - defaultProviders.length)\n      );\n    }\n    setSelectedProviders(prev =>\n      prev.filter(i => i !== index).map(i => (i > index ? i - 1 : i))\n    );\n  };\n\n  const deleteSelectedProviders = () => {\n    const defaultLen = defaultProviders.length;\n    const customIndices = selectedProviders\n      .filter(index => index >= defaultLen)\n      .map(index => index - defaultLen);\n\n    setCustomProviders(prev =>\n      prev.filter((_, index) => !customIndices.includes(index))\n    );\n\n    setSelectedProviders(prev => {\n      const deleted = new Set(customIndices.map(c => c + defaultLen));\n      return prev\n        .filter(i => !deleted.has(i))\n        .map(i => {\n          const countBefore = customIndices.filter(c => (c + defaultLen) < i).length;\n          return i - countBefore;\n        });\n    });\n  };\n\n  const updateProvider = () => {\n    if (editingIndex !== null) {\n      const updated = [...customProviders];\n      updated[editingIndex] = { ...newProvider };\n      setCustomProviders(updated);\n      setNewProvider({ name: '', model: '', inputCost: 0, outputCost: 0 });\n      setEditingIndex(null);\n    }\n  };\n\n  const addCustomProvider = () => {\n    if (newProvider.name && newProvider.model) {\n      if (editingIndex !== null) {\n        updateProvider();\n      } else {\n        setCustomProviders([...customProviders, { ...newProvider }]);\n        setNewProvider({ name: '', model: '', inputCost: 0, outputCost: 0 });\n      }\n    }\n  };\n\n  const deselectAllProviders = () => {\n    setSelectedProviders([]);\n  };\n\n  const toggleProvider = (index) => {\n    setSelectedProviders(prev =>\n      prev.includes(index)\n        ? prev.filter(i => i !== index)\n        : [...prev, index]\n    );\n  };\n\n  // Grouping helper\n  function getGroupKey(provider) {\n    if (provider.model && provider.model.includes('/')) {\n      const prefix = provider.model.split('/')[0].trim();\n      if (prefix.toLowerCase().includes(\"mistral\")) {\n        return \"Mistral\";\n      }\n      return prefix;\n    } else if (provider.name.includes(':')) {\n      return provider.name.split(':')[0].trim();\n    }\n    return provider.name;\n  }\n\n  const [resultsState, setResultsState] = useState([]); // DON'T REDECLARE 'results'!\n  // Just remove or rename if you see duplication. \n  // We'll skip using resultsState for now—use 'results' from above.\n\n  const [calcLoading, setCalcLoading] = useState(false);\n  const toggleProviderGroup = (groupKey) => {\n    const isExpanded = expandedProviders[groupKey] === undefined ? false : expandedProviders[groupKey];\n    setExpandedProviders(prev => ({\n      ...prev,\n      [groupKey]: !isExpanded\n    }));\n  };\n\n  const toggleSourceGroup = (source) => {\n    setExpandedSource(prev => ({\n      ...prev,\n      [source]: !prev[source]\n    }));\n  };\n\n  useEffect(() => {\n    if (selectedProviders.length > 0) {\n      calculateCost();\n    } else {\n      setResults([]);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedProviders]);\n\n  const calculateCost = async () => {\n    if (selectedProviders.length === 0) {\n      setResults([]);\n      return;\n    }\n    const allProviders = [...defaultProviders, ...customProviders];\n    console.log(\"All providers:\", allProviders);\n    const selectedData = allProviders.filter((_, index) =>\n      selectedProviders.includes(index)\n    );\n    console.log(\"Selected providers data:\", selectedData);\n\n    try {\n      setCalcLoading(true);\n      const response = await fetch('http://localhost:8000/calculate', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          input_tokens: tokens.input,\n          output_tokens: tokens.output,\n          custom_providers: selectedData\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log(\"Calculation response:\", data);\n      setResults(data);\n      setBenchmarks([]);\n    } catch (error) {\n      console.error(\"Error during calculation:\", error);\n      setResults([]);\n    } finally {\n      setCalcLoading(false);\n    }\n  };\n\n  // Fetch benchmarks for an individual model\n  const handleCalculateBenchmarks = async (modelName) => {\n    try {\n      const encoded = encodeURIComponent(modelName);\n      const benchRes = await fetch(`http://localhost:8000/benchmarks/${encoded}`);\n      if (!benchRes.ok) {\n        throw new Error(`HTTP error! status: ${benchRes.status}`);\n      }\n      const benchData = await benchRes.json();\n      console.log(\"Benchmarks for\", modelName, \":\", benchData);\n      setBenchmarks(benchData);\n    } catch (error) {\n      console.error(\"Error fetching benchmarks:\", error);\n      setBenchmarks([]);\n    }\n  };\n\n  const selectAllProviders = () => {\n    const total = defaultProviders.length + customProviders.length;\n    setSelectedProviders(Array.from({ length: total }, (_, i) => i));\n  };\n\n  // Sorting functions for benchmark table\n  const handleSort = (key) => {\n    if (sortKey === key) {\n      setSortDirection(prev => (prev === \"asc\" ? \"desc\" : \"asc\"));\n    } else {\n      setSortKey(key);\n      setSortDirection(\"desc\");\n    }\n  };\n\n  const renderSortArrow = (key) => {\n    if (sortKey === key) {\n      return sortDirection === \"asc\" ? \" ▲\" : \" ▼\";\n    }\n    return \" ▼\";\n  };\n\n  // Prepare filtered and grouped providers\n  const filteredOpenRouter = defaultProviders\n    .filter(provider =>\n      provider.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n      provider.model.toLowerCase().includes(searchQuery.toLowerCase())\n    )\n    .map((provider, i) => ({ ...provider, originalIndex: i }));\n\n  const filteredCustom = customProviders\n    .filter(provider =>\n      provider.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n      provider.model.toLowerCase().includes(searchQuery.toLowerCase())\n    )\n    .map((provider, i) => ({ ...provider, originalIndex: defaultProviders.length + i }));\n\n  const groupedOpenRouter = filteredOpenRouter.reduce((acc, provider) => {\n    const key = getGroupKey(provider);\n    if (!acc[key]) {\n      acc[key] = [];\n    }\n    acc[key].push(provider);\n    return acc;\n  }, {});\n\n  const groupedCustom = filteredCustom.reduce((acc, provider) => {\n    const key = getGroupKey(provider);\n    if (!acc[key]) {\n      acc[key] = [];\n    }\n    acc[key].push(provider);\n    return acc;\n  }, {});\n\n  return (\n    <div style={{ fontFamily: 'inherit' }}>\n      {/* 1. Nav + hero + logos + dev pitch */}\n      <Header />\n        showLeaderboard={showLeaderboard}\n        toggleShowLeaderboard={() => setShowLeaderboard(prev => !prev)}\n      />\n\n      {/* 2. Features Section */}\n      <FeaturesGrid />\n\n      {/* 3. The cost calculator sections */}\n      <div className=\"container\" style={{ padding: '2rem 0' }}>\n        {/* Leaderboard Toggle */}\n        <div style={{ display: 'flex', justifyContent: 'flex-end', marginBottom: '1rem' }}>\n          <button\n            onClick={() => setShowLeaderboard(prev => !prev)}\n            className=\"btn btn-secondary\"\n          >\n            {showLeaderboard ? 'Hide Leaderboard' : 'Show Leaderboard'}\n          </button>\n        </div>\n\n        {/* Benchmark Table */}\n        {showLeaderboard && (\n          <BenchmarkTable\n            benchmarkTableData={benchmarkTableData}\n            handleSort={handleSort}\n            sortKey={sortKey}\n            sortDirection={sortDirection}\n            renderSortArrow={renderSortArrow}\n          />\n        )}\n\n        {/* Token Inputs */}\n        <TokenInputs\n          tokens={tokens}\n          setTokens={setTokens}\n          calculateCost={calculateCost}\n          selectedProviders={selectedProviders}\n        />\n\n        {/* Custom Provider Form */}\n        <CustomProviderForm\n          newProvider={newProvider}\n          setNewProvider={setNewProvider}\n          editingIndex={editingIndex}\n          addCustomProvider={addCustomProvider}\n          cancelEdit={cancelEdit}\n        />\n\n        {/* Providers List */}\n        {(filteredOpenRouter.length > 0 || filteredCustom.length > 0) && (\n          <ProviderList\n            filteredOpenRouter={filteredOpenRouter}\n            filteredCustom={filteredCustom}\n            expandedSource={expandedSource}\n            toggleSourceGroup={toggleSourceGroup}\n            groupedOpenRouter={groupedOpenRouter}\n            groupedCustom={groupedCustom}\n            expandedProviders={expandedProviders}\n            toggleProviderGroup={toggleProviderGroup}\n            toggleProvider={toggleProvider}\n            selectedProviders={selectedProviders}\n            editProvider={editProvider}\n            deleteProvider={deleteProvider}\n            searchQuery={searchQuery}\n            setSearchQuery={setSearchQuery}\n            selectAllProviders={selectAllProviders}\n            deselectAllProviders={deselectAllProviders}\n            deleteSelectedProviders={deleteSelectedProviders}\n          />\n        )}\n\n        {/* Results Section */}\n        {results.length > 0 && (\n          <ResultsChart results={results} />\n        )}\n\n        {/* Benchmarks Display */}\n        {benchmarks.length > 0 && (\n          <BenchmarksDisplay benchmarks={benchmarks} />\n        )}\n      </div>\n\n      {/* 4. Footer */}\n      <Footer />\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}